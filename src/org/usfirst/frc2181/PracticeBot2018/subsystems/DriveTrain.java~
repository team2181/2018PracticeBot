// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2181.PracticeBot2018.subsystems;

import org.usfirst.frc2181.PracticeBot2018.RobotMap;
import org.usfirst.frc2181.PracticeBot2018.commands.*;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;



/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX talonSRX1 = RobotMap.driveTrainTalonSRX1;
    private final WPI_TalonSRX talonSRX2 = RobotMap.driveTrainTalonSRX2;
    private final WPI_TalonSRX talonSRX3 = RobotMap.driveTrainTalonSRX3;
    private final WPI_TalonSRX talonSRX4 = RobotMap.driveTrainTalonSRX4;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveTrainDefault(0));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void drive(Joystick j) {
    	// double spd = .5*j.getRawAxis(1);
    	
    	
    	//This makes the triggers control speed
    	//if (j.getRawAxis(2) > 0 & j.getRawAxis(3)> 0){
    		//spd = 0.0;
    		//} else if (j.getRawAxis(2) > 0) {
    			//spd = .5*j.getRawAxis(2);
    		//}else if (j.getRawAxis(3) > 0) {
    			//spd = -.5*j.getRawAxis(3);
    		//}
    	
    	double spd = .5*j.getRawAxis(1);
    	double rot = .5*j.getRawAxis(4);
    	double strafe = 1.0*j.getRawAxis(0);
    	strafe = 0.0;
    	robotDrive41.mecanumDrive_Cartesian(spd, strafe, rot,0.0);
    }
}

